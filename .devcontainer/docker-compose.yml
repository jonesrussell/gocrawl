services:

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
        # Ensure that the variables in .env match the same variables in devcontainer.json
        - "../.env"

    volumes:
      - ../..:/workspaces:cached
      
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:elasticsearch

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    env_file:
      - "../.env"
    environment:
      - discovery.type=single-node
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
    # Expose via devcontainer forwardPorts instead of binding host ports
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 1G

  kibana:  # New Kibana service
    image: docker.elastic.co/kibana/kibana:8.17.1  # Set image version
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  # Connect to Elasticsearch
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}  # Use the same password as Elasticsearch
    # Expose via devcontainer forwardPorts instead of binding host ports

volumes:
  elasticsearch-data:
