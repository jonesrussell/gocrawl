version: '3'

output:
  group:
    error_only: false
  colorize: true
  prefix:
    info: "🔍"
    success: "✅"
    warning: "⚠️"
    error: "❌"

tasks:
  api:
    desc: "Run the HTTP API server"
    cmds:
      - go run main.go httpd
    ignore_error: true
    interactive: true

  build:
    desc: "Build the web crawler executable"
    cmds:
      - mkdir -p bin
      - go build -o bin/gocrawl main.go

  crawl:
    desc: "Run the web crawler for a single source defined in sources.yml"
    cmds:
      - echo '' > app.log
      - go run main.go index delete --source {{.CLI_ARGS | trim}} --force || true
      - go run main.go crawl {{.CLI_ARGS | trim}}
      - go run main.go index list
    interactive: true

  deadcode:
    desc: "Find unreachable functions in the codebase"
    cmds:
      - deadcode -test -generated ./...
    ignore_error: true

  help:
    desc: "Show available commands"
    cmds:
      - go run main.go --help

  index:create:
    desc: "Create an Elasticsearch index"
    cmds:
      - go run main.go index create {{.CLI_ARGS}}
    ignore_error: true
    interactive: true

  index:list:
    desc: "List all Elasticsearch index"
    cmds:
      - go run main.go index list
    ignore_error: true

  index:delete:
    desc: "Delete one or more Elasticsearch index"
    cmds:
      - go run main.go index delete {{.CLI_ARGS}}
    ignore_error: true
    interactive: true

  index:delete:source:
    desc: "Delete index for a specific source"
    cmds:
      - go run main.go index delete --source "{{.SOURCE}}" --force
    ignore_error: true
    interactive: false
    vars:
      SOURCE: '{{.SOURCE}}'

  job:
    desc: "Run the job scheduler for automated crawling based on sources.yml schedules"
    cmds:
      - go run main.go job
    ignore_error: true
    interactive: true

  lint:
    desc: "Lint the Go code"
    cmds:
      - go fmt ./...
      - go vet ./...
      - golangci-lint run ./...

  search:
    desc: "Search crawled content"
    cmds:
      - go run main.go search -q "{{.CLI_ARGS}}" -i elliotlake_elliotlaketoday_articles
    ignore_error: true
    interactive: true

  sources:list:
    desc: "List all sources"
    cmds:
      - go run main.go sources list
    ignore_error: true

  test:
    desc: "Run the tests"
    cmds:
      - go test -v ./...

  test:cover:
    desc: "Run tests with coverage"
    cmds:
      - mkdir -p coverage
      - go test -coverprofile=coverage/coverage.out ./...
      - go tool cover -html=coverage/coverage.out -o coverage/coverage.html
      - go tool cover -func=coverage/coverage.out
    generates:
      - coverage/coverage.out
      - coverage/coverage.html

  generate:
    desc: Generate code (mocks, etc.)
    cmds:
      - ./scripts/generate_mocks.sh

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf bin/
      - rm -rf testutils/mocks/

  sources:add:
    desc: Add a new source
    cmds:
      - go run main.go sources add

  sources:remove:
    desc: Remove a source
    cmds:
      - go run main.go sources remove
