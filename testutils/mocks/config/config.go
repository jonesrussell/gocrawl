// Code generated by MockGen. DO NOT EDIT.
// Source: internal/config/interface.go

// Package config is a generated GoMock package.
package config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	app "github.com/jonesrussell/gocrawl/internal/config/app"
	crawler "github.com/jonesrussell/gocrawl/internal/config/crawler"
	elasticsearch "github.com/jonesrussell/gocrawl/internal/config/elasticsearch"
	log "github.com/jonesrussell/gocrawl/internal/config/log"
	priority "github.com/jonesrussell/gocrawl/internal/config/priority"
	server "github.com/jonesrussell/gocrawl/internal/config/server"
	storage "github.com/jonesrussell/gocrawl/internal/config/storage"
	types "github.com/jonesrussell/gocrawl/internal/config/types"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// GetAppConfig mocks base method.
func (m *MockInterface) GetAppConfig() *app.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAppConfig")
	ret0, _ := ret[0].(*app.Config)
	return ret0
}

// GetAppConfig indicates an expected call of GetAppConfig.
func (mr *MockInterfaceMockRecorder) GetAppConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAppConfig", reflect.TypeOf((*MockInterface)(nil).GetAppConfig))
}

// GetCommand mocks base method.
func (m *MockInterface) GetCommand() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCommand")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCommand indicates an expected call of GetCommand.
func (mr *MockInterfaceMockRecorder) GetCommand() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCommand", reflect.TypeOf((*MockInterface)(nil).GetCommand))
}

// GetConfigFile mocks base method.
func (m *MockInterface) GetConfigFile() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigFile")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetConfigFile indicates an expected call of GetConfigFile.
func (mr *MockInterfaceMockRecorder) GetConfigFile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigFile", reflect.TypeOf((*MockInterface)(nil).GetConfigFile))
}

// GetCrawlerConfig mocks base method.
func (m *MockInterface) GetCrawlerConfig() *crawler.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCrawlerConfig")
	ret0, _ := ret[0].(*crawler.Config)
	return ret0
}

// GetCrawlerConfig indicates an expected call of GetCrawlerConfig.
func (mr *MockInterfaceMockRecorder) GetCrawlerConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCrawlerConfig", reflect.TypeOf((*MockInterface)(nil).GetCrawlerConfig))
}

// GetElasticsearchConfig mocks base method.
func (m *MockInterface) GetElasticsearchConfig() *elasticsearch.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetElasticsearchConfig")
	ret0, _ := ret[0].(*elasticsearch.Config)
	return ret0
}

// GetElasticsearchConfig indicates an expected call of GetElasticsearchConfig.
func (mr *MockInterfaceMockRecorder) GetElasticsearchConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetElasticsearchConfig", reflect.TypeOf((*MockInterface)(nil).GetElasticsearchConfig))
}

// GetLogConfig mocks base method.
func (m *MockInterface) GetLogConfig() *log.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogConfig")
	ret0, _ := ret[0].(*log.Config)
	return ret0
}

// GetLogConfig indicates an expected call of GetLogConfig.
func (mr *MockInterfaceMockRecorder) GetLogConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogConfig", reflect.TypeOf((*MockInterface)(nil).GetLogConfig))
}

// GetPriorityConfig mocks base method.
func (m *MockInterface) GetPriorityConfig() *priority.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPriorityConfig")
	ret0, _ := ret[0].(*priority.Config)
	return ret0
}

// GetPriorityConfig indicates an expected call of GetPriorityConfig.
func (mr *MockInterfaceMockRecorder) GetPriorityConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPriorityConfig", reflect.TypeOf((*MockInterface)(nil).GetPriorityConfig))
}

// GetServerConfig mocks base method.
func (m *MockInterface) GetServerConfig() *server.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServerConfig")
	ret0, _ := ret[0].(*server.Config)
	return ret0
}

// GetServerConfig indicates an expected call of GetServerConfig.
func (mr *MockInterfaceMockRecorder) GetServerConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServerConfig", reflect.TypeOf((*MockInterface)(nil).GetServerConfig))
}

// GetSources mocks base method.
func (m *MockInterface) GetSources() []types.Source {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSources")
	ret0, _ := ret[0].([]types.Source)
	return ret0
}

// GetSources indicates an expected call of GetSources.
func (mr *MockInterfaceMockRecorder) GetSources() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSources", reflect.TypeOf((*MockInterface)(nil).GetSources))
}

// GetStorageConfig mocks base method.
func (m *MockInterface) GetStorageConfig() *storage.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorageConfig")
	ret0, _ := ret[0].(*storage.Config)
	return ret0
}

// GetStorageConfig indicates an expected call of GetStorageConfig.
func (mr *MockInterfaceMockRecorder) GetStorageConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageConfig", reflect.TypeOf((*MockInterface)(nil).GetStorageConfig))
}

// Validate mocks base method.
func (m *MockInterface) Validate() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockInterfaceMockRecorder) Validate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockInterface)(nil).Validate))
}
